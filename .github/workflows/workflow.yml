# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Python Package

on:
  push:
    branches:
      - main  # Change this to whatever branch you want to trigger the action on
  pull_request:
    branches:
      - main  # Optional: Can trigger on PRs too if you want

jobs:
  publish:
    name: Publish Python Package to PyPI
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Check out the repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python 3.x
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    # Step 3: Install dependencies (wheel, setuptools, twine)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    # Step 4: Build the package
    - name: Build the package
      run: |
        python setup.py sdist bdist_wheel

    # Step 5: Publish the package to PyPI
    - name: Publish to PyPI
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_KEY }}
      run: |
        python -m twine upload dist/* --skip-existing
